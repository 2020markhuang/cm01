/**
@brief 本文件定义了常用的基本类型
$Id: TrackerCfg.h  2016-06-25  viva huang $
**/
#ifndef TRACKERCFG_H
#define TRACKERCFG_H
#define __TRACKER_LED_SUPPORT__
#define __TRACKIMO_GSENSOR__
#define __TRACKIMO_BLE__
#define __TRACKIMO_WIFI__
#define __TRACKIMO_AGPS__
#define __TRACKIMO_SMART_WIFI__
#define __TRACKIMO_MODULE__
//设置版本号
#define TRACKER_COMM_VERSION "CM01_V1.0"
#define TRACKER_COMM_BULDTIME "2020-10-17"
#define TRACKER_COMM_NETWORK"verizon"
#define PROTOCOL_VERSION "V1"
#define TRACKER_COMM_CFG_VERSION_LENGTH 20

#define MAX_CELL_NUM 3
#define TRK_LOCATION_REPORT_TIME_MAX 6
#define TRK_CFG_DEVICE_ID_LENGTH              4      /**< DEVICE_ID长度 **/
#define TRK_CFG_IMSI_LENGTH              20      /**< IMSI长度 **/
#define TRK_CFG_IMEI_LENGTH              20     /**< IMEI长度 **/
#define TRK_CFG_ICCID_LENGTH              21     /**< ICCID长度 **/

//IP设置相关默认值
//agps
#define TRACKER_IP_DEFAULT_HOST_DOMAIN  ""  
#define TRACKER_IP_DEFAULT_PORT  80   
#define TRACKER_IP_DEFAULT_APN  "vlink.data"
#define TRACKER_IP_DEFAULT_ACCOUNT  ""
#define TRACKER_IP_DEFAULT_PW  ""
#define TRACKER_DEFAULT_IMEI "358688000000158" 
#define TRACKER_BS_MAX_NUMBER  6   //基站个数
#define TRACKER_BS_NAME_MAX_LENGT  50   //基站名称最大长度
#define TRACKER_BS_ADDR_MAX_LENGT  50   //基站地址最大长度
#define DEFAULT_SERVER_PROD 
//#define DEFAULT_SERVER_DEV   //ANT

#if defined(DEFAULT_SERVER_PROD)
#define TRACKER_HTTP_PORT     9999
#define TRACKER_IP_DEFAULT_IP0   54 
#define TRACKER_IP_DEFAULT_IP1   200
#define TRACKER_IP_DEFAULT_IP2   49
#define TRACKER_IP_DEFAULT_IP3   10
#endif

typedef enum
{
	COMMAND_ACK = 0,
	COMMAND_TRACKING_MODE_START,//1 //已完成
	COMMAND_TRACKING_MODE_STOP,//2 //已完成
	COMMAND_GENERAL_SETUP,//3 //已完成
	COMMAND_TESTMODE,//4 //已完成
	COMMAND_STATUS,//5 //已完成
	COMMAND_SETALARM,//6
	COMMAND_STOPALARM,//7
	COMMAND_DELETE_FILE,// 8 //已完成
	COMMAND_BEEP,//9 //已完成
	COMMAND_REBOOT,//10 //已完成
	COMMAND_BACKUP_ENABLE,//11 //已完成
	COMMAND_GPS_SEARCHMODE,//12 //已完成
	COMMAND_GPS_FIX_WHEN_MOVING,//13
	COMMAND_CLEAR_ALL_ALARMS,//14 //已完成
	COMMAND_PERIODICAL_STATUS_REPORT,//15
	COMMAND_GPS_ON_POWER_ON,//16
	COMMAND_GET_HISTORY,//17
	COMMAND_VOICE_CALL,//18 //已完成
	COMMAND_GET_IMSI,//19
	COMMAND_GET_CARRIERS,//20
	COMMAND_GET_GPS,//21 //已完成
	COMMAND_DEBUG_MODE,//22
	//ALARM
	COMMAND_FENCE_ALARM,//23 //已完成
	COMMAND_FENCE_ALARM_ONOFF,//24 //已完成
	COMMAND_SPEED_ALARM,//25 //已完成
	COMMAND_MOVING_ALARM,//26 //已完成
	COMMAND_BATTERY_ALARM,//27 //已完成
	COMMAND_SET_APN,//28
	COMMAND_SET_ACTIVE_IMSI,//29
	COMMAND_SET_ACTIVE_CARRIER,//30 //已完成
	COMMAND_STATUS_REQUEST2,//31
	COMMAND_WAKEUP_WHEN_OFF,//32
	COMMAND_CONFIRM_CALLERID,//33
	COMMAND_DEVICE_ACTIVATED,//34
	COMMAND_SESSION_MAX_BYTES,//35
	//COMMAND_REBOOT_TIMER = 36,//36 这个没用
	//COMMAND_PING,//37
	COMMAND_OTA_START = 36,
	COMMAND_OTA,//37
	COMMAND_OTA_INSTALL,//38
	COMMAND_GENERAL_PARAMETER,//39 dod用
	COMMAND_ACK_SETTING,//40
	COMMAND_GET_SINGLE_MEASUREMENT,//41
	COMMAND_START_TRACKING_MODE_WITH_MEASUREMENT,//42
	COMMAND_SCHEDULE_SLEEP,//43
	COMMAND_GET_BT_MAC,//44
	COMMAND_SCHEDULE_SLEEP_OFF,//45
	COMMAND_SET_DEVICE_SETTING,//46
	COMMAND_GENERAL_SETUP_WITH_NET_IDENTIFIERS,//47
	//NEW
	COMMAND_START_DOWNLOAD,//48
	COMMAND_TIME_ZONE_RESPONSE,//49
	COMMAND_LIGHT_SENSOR_SETTINGS,//50
	COMMAND_SET_BT_WATCHDOG,//51
	COMMAND_TEST_COMPONENT,//52
	COMMAND_AGPS_BOOTSTRAP_LOCATION,//53
	COMMAND_SET_COMPONENTS_DYNAMIC,//54
	COMMAND_HISTORY_ACK,//55
	COMMAND_SET_SMART_WIFI = 56,//56
	COMMAND_SET_SMART_WIFI_TABLE = 57,
	COMMAND_RESET_SESSION = 58,
	//以下是我自定义的指令
	COMMAND_MY_COMMAND_USSD_Q_TIMER = 80,//USSD发送Q的timer可改
	COMMAND_MY_COMMAND_MOTION_COUNT = 81,//震动检测可改
	COMMAND_AUTO_CHANGE_CARRIER = 82,//震动检测可改
	COMMAND_MAX
} command_type;

typedef enum
{
	  REPLY_HEADER_SUCCESS = 0,
	  REPLY_HEADER_STATUS_REPORT_1, //1
	  REPLY_HEADER_ALARM_TRIGGERED,//2
	  REPLY_HEADER_BUTTON,//3
	  REPLY_HEADER_GPS_UPLOAD,//4
	  REPLY_HEADER_REPORT_IMSI,//5
	  REPLY_HEADER_REPORT_CARRIERS,//6
	  REPLY_HEADER_GET_GPS,//7
	  REPLY_HEADER_DEBUG,//8
	  REPLY_GSM_LOCATION_REPORT,//9
	  REPLY_HEADER_STATUS_REPORT_2,//0a
	  REPLY_HEADER_POWERUP,//0b
	  REPLY_HEADER_POWERDOWN,//0c
	  REPLY_HEADER_HISTORYREPORT,//0d
	  REPLY_HEADER_CALLERID,//0e
	  REPLY_HEADER_SESSION_START,//0f
	  REPLY_HEADER_SESSION_STOP,//10
	  REPLY_HEADER_PING,//11
	  //REPLY_REBOOT,//12 //关机前不要发任何东西，以前遇到过问题
	  REPLY_MULTI_GSM_LOCATION_REPORT_1,//多基站 12
	  REPLY_MULTI_GSM_LOCATION_REPORT_2,//多基站2 13
	  REPLY_HEADER_BUTTON_GSM,//添加gsm信息 14
	  REPLY_HEADER_ALARM_TRIGGERED_WITH_GSM,//添加gsm信息 15
	  REPLY_HEADER_GENERAL_PARAMETER,//不知道是做什么的，test page里面有,dod用了 16
	  REPLY_HEADER_SINGLE_MEASUREMENT,//17
	  REPLY_HEADER_SHUTDOWN,//0x18
	  //REPLY_HEADER_TRACKING_WITH_MEASUREMENT,
	  REPLY_BT_MAC_REPORT,//0x19
	  REPLY_HEADER_STATUS_REPORT_3,//0x1a
	  REPLY_BUTTON_WITH_IDENTIFIERS_GPS,//0x1b
	  REPLY_HANDSHAKE_REQUEST,//0x1c
	  REPLY_OTA_START_DOWNLOADING,//0x1d
	  REPLY_OTA_FINISH_DOWNLOADING,//0x1e
	  REPLY_OTA_FINISH_INSTALL,//0x1f
	  REPLY_BUTTON_WITH_IDENTIFIERS_GSM,//0x20

	  REPLY_TIMEZONE_REQUEST,//0x21 //不知道啥意思
	  REPLY_HEADER_STATUS_REPORT_4,//0x22

	  REPLY_ACK_SEQUENTIAL,//0x23
	  REPLY_UNIVERSAL_TEST,//0x24
	  
	  REPLY_AGPS_BOOTSTRAP_REQUEST,//0x25 37
	  REPLY_DYNAMIC_STATUS_REPORT,//0x26 38
	  REPLY_BUTTON_WITH_WIFI_LOCATION,//0x27 39
	  REPLY_GET_ACK = 41,//0x27 39
	  REPLY_HEADER_REPORT_CARRIERS_ERROR,
	  REPLY_HEADER_ERROR = 255,
	  REPLY_MAX_ID
} msg_reply_header_type;


typedef enum
{
    DYNAMIC_ID_AGPS1_EPO = 117,    //0-OFF,1-ON
    DYNAMIC_ID_AGPS2_GPS_IN = 118,  //0-OFF,1-ON 
    DYNAMIC_ID_AGPS1_EPO_THIS_POWERUP = 119,    //no operation - 0/fail - 1/success - 2/going - 3
    DYNAMIC_ID_SMART_WIFI_ONOFF = 120,//0-OFF,1-ON 
    DYNAMIC_ID_SERVER_CONTROL_DEVICEID = 121,//0-OFF tele2 deviceid由imei自动生成,1-ON  tele2 deviceid由服务器决定，不自动生成
    DYNAMIC_ID_DATA_ACK_MINUTES = 122,//0-OFF 
    DYNAMIC_ID_DEVICE_ACK_DISABLE = 123,//0-OFF,1-ON
    DYNAMIC_ID_GPS_TIME_SYNC_ONOFF = 124,//0-OFF,1-ON
} dynamic_id;

typedef enum
{
    AGPS1_EPO_THIS_POWERUP_NO_OPERATION = 0,    //no operation - 0/fail - 1/success - 2/going - 3
    AGPS1_EPO_THIS_POWERUP_FAIL = 1, 
    AGPS1_EPO_THIS_POWERUP_SUCCESS = 2, 
    AGPS1_EPO_THIS_POWERUP_GOING = 3, 
} agps1_epo_this_powerup;


typedef enum
{
    COMPRESSION_NO = 48,    //'0'
    COMPRESSION_1 = 49,    //bcd '1'
    COMPRESSION_2 = 50,    //special 3byte low accuracy bytes '2'
    COMPRESSION_3 = 51,    //special 4byte high accuracy bytes '3'
    COMPRESSION_MAX
} compression_type;

typedef enum
{
    TEST_COMPO_ALL_INFO_1 = 0, 
    TEST_COMPO_ALL_INFO_2 = 1,  
    TEST_COMPO_DELETE_BACKUP_FILE = 2,    
    TEST_COMPO_WRITE_IMEI = 3, 
	//#ifdef __TRACKIMO_SMART_WIFI__
    TEST_COMPO_WIFI_TEST_ADD = 4,  
    TEST_COMPO_WIFI_TEST_DEL = 5,
    TEST_COMPO_WIFI_TEST_READ = 6,   
    TEST_COMPO_WIFI_TEST_DEL_FILE = 7,  
    TEST_COMPO_WIFI_TEST_CLEAR_LIST = 8, 
	//#endif

    TEST_COMPO_MAX
} test_compo_type;


/***************************************************
8 bits Identification.
8 bits Ack
Channel.
1 bit Send
Ack for "Status Request"
1 bit Send
Ack for "Get History"
1 bit Send
Ack for "Get Imsis"
1 bit Send
Ack for "Get Carriers"
1 bit Send
Ack for "Get Single Measurement"
1 bit Send
Ack for "Status 2 Request"
1 bit Send
Ack for "Confirm CallerID"
1 bit Send
Ack for "Get Bluetooth MAC Report" // Unimplemented yet
***************************************************/
#define ACK_BIT_Status_Request 0x80
#define ACK_BIT_Get_History    0x40
#define ACK_BIT_Get_IMSI       0x20
#define ACK_BIT_Get_Carriers   0x10
#define ACK_BIT_Get_Single_Measurement 0x08
#define ACK_BIT_Status_2_Request 0x04
#define ACK_BIT_Confirm_CallerID 0x02
#define ACK_BIT_Get_Bluetooth_MAC_Report 0x01

#define USSD_Q_EACH_LENGTH 200 //ussd最多可以发183个字节
#define gUSSDbuf_asc_LENGTH 200
#define gUSSDbuf_reply_asc_LENGTH 400
#define gUSSDbuf_reply_unicode_LENGTH 400
#endif
